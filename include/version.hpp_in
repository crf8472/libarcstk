// vim:ft=cpp
#ifndef __LIBARCSTK_VERSION_HPP__
#define __LIBARCSTK_VERSION_HPP__

/**
 * \file
 *
 * \brief Provide version and name information for libarcstk.
 */

#include <string>

namespace arcstk
{

/**
 * \addtogroup logging
 * @{
 */

/**
 * \brief Major version number.
 */
constexpr int LIBARCSTK_VERSION_MAJOR = @PROJECT_VERSION_MAJOR@;

/**
 * \brief Minor version number.
 */
constexpr int LIBARCSTK_VERSION_MINOR = @PROJECT_VERSION_MINOR@;

/**
 * \brief Patch level.
 */
constexpr int LIBARCSTK_VERSION_PATCH = @PROJECT_VERSION_PATCH@;

/**
 * \brief Version suffix (e.g. 'alpha.1', 'beta.6', 'rc.3' etc.).
 */
constexpr auto LIBARCSTK_VERSION_SUFFIX = "@PROJECT_VERSION_SUFFIX@";

/**
 * \brief Version suffix as <tt>std::string</tt>.
 */
const std::string LIBARCSTK_VERSION_SUFFIX_STRING { LIBARCSTK_VERSION_SUFFIX };

/**
 * \brief Complete version number.
 */
constexpr auto LIBARCSTK_VERSION_INFO = "@PROJECT_VERSION_STRING@";

/**
 * \brief Complete version number as <tt>std::string</tt>.
 */
const std::string LIBARCSTK_VERSION_INFO_STRING { LIBARCSTK_VERSION_INFO };

/**
 * \brief Library name.
 */
constexpr auto LIBARCSTK_NAME = "@PROJECT_NAME@";

/**
 * \brief Library name as a <tt>std::string</tt>.
 */
const std::string LIBARCSTK_NAME_STRING { LIBARCSTK_NAME };

/**
 * \brief Compares specified version to actual version
 *
 * \param[in] major Major version number to test
 * \param[in] minor Minor version number to test
 * \param[in] patch Patch level number to test
 *
 * \return TRUE if actual version is at least specified version
 */
inline bool api_version_is_at_least(const int major, const int minor,
		const int patch)
{
	if (LIBARCSTK_VERSION_MAJOR > major)
	{
		return true;
	}

	if (LIBARCSTK_VERSION_MINOR > minor)
	{
		return LIBARCSTK_VERSION_MAJOR == major;
	}

	if (LIBARCSTK_VERSION_PATCH > patch)
	{
		return LIBARCSTK_VERSION_MINOR == minor;
	}

	return  LIBARCSTK_VERSION_MAJOR == major
		and LIBARCSTK_VERSION_MINOR == minor
		and LIBARCSTK_VERSION_PATCH == patch;
}

/** @} */

} // namespace arcstk

#endif

